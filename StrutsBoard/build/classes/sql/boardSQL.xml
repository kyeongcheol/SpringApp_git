<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>
<sqlMap>

<!-- boardVO는 자바빈 -> 별칭을 board로 사용 -->
<typeAlias alias="board" type="board.boardVO" /> <!-- 자바빈 -->

<!-- 답변글 자바빈(cboardVO) 추가 -->
<typeAlias alias="comment" type="board.cboardVO" />


<!-- 리절트 맵 정의(테이블이 여러 개면 여러 개의 리절트 맵을 정희하면 됨) -->
<!-- <resultMap id="boardRes" class="board"> -->

<!-- 실제 테이블에 있는 컬럼을 result property와 매핑시킴 -->
<!-- <result property="no" column="no" />
<result property="subject" column="subject" />
<result property="name" column="name" />
<result property="password" column="password" />
<result property="content" column="content" />
<result property="file_orgname" column="file_orgname" />
<result property="file_savname" column="file_savname" />
<result property="readhit" column="readhit" />
<result property="regdate" column="regdate" />
</resultMap> -->

<!-- 새로운 SBoard2_yang table resultMap 정의 -->
<resultMap id="boardRes" class="board">
<result property="no" column="no" />
<result property="subject" column="subject" />
<result property="name" column="name" />
<result property="password" column="password" />
<result property="content" column="content" />
<result property="file_orgname" column="file_orgname" />
<result property="file_savname" column="file_savname" />
<result property="readhit" column="readhit" />
<result property="regdate" column="regdate" />

<!-- 추가 컬럼 리절트 매핑 -->
<result property="ref" column="ref" />
<result property="re_step" column="re_step" />
<result property="re_level" column="re_level" />
</resultMap>


<!-- 답변 테이블(boardc_yang) 리절트 매핑 -->
<resultMap id="commentRes" class="comment">
<result property="no" column="no" />
<result property="originno" column="originno" />
<result property="name" column="name" />
<result property="password" column="password" />
<result property="content" column="content" />
<result property="regdate" column="regdate" />
</resultMap>

<!-- 자바빈 : boardVO==board==boardRes -->
<!-- 공통으로 사용할 select 절 정의 -->
<sql id="select-all">
  SELECT * FROM SBoard2_yang
</sql>

<!-- 답변 글 테이블 select 문 정의-->
<sql id="select-com">
 SELECT * FROM Boardc_yang
</sql>

<!-- ibatis에서는 쿼리문에서 ?을 사용하지 않음 -> # 사용 -->
<!-- 공통으로 사용할 where-no 절 정의 -->
<sql id="where-no">
 WHERE no = #no#
</sql>


<!-- select 쿼리문 정의 -->
<!-- 메서드로 정의하자면 .. public List boardVO selectAll(int s) -->
<!-- 리턴 값을 List 객체로 자동으로 설정해줌 -->
<select id="selectAll" resultMap="boardRes" parameterClass="int">
<include refid="select-all"/>
<!-- ORDER BY no DESC -->

<!-- ref, re_step으로 정렬 -->
<!-- 답변글 로직으로 수정 -->
ORDER BY ref DESC, re_step ASC
</select>

<!-- 결국 쿼리문은 select * from SBoard2_yang where no = #no# 와 같음 -->
<select id="selectOne" resultMap="boardRes" parameterClass="int">
<include refid="select-all" />
<include refid="where-no" />
</select>


<!-- 검색로직 추가 시작 -->
<!-- searchKeyword는 listAction에서 정의한 변수 -->
<!-- 그리고 boardList.jsp에서 검색 로직 안에 textfield name=searchKeyword로 입력값을 넘겨줌 -->

<!-- 0. 이름으로 검색 -->
<select id="selectSearchW" resultMap="boardRes" parameterClass="string">
<include refid="select-all" />
WHERE name like #searchKeyword#
ORDER BY no DESC
</select>

<!-- 1. 제목으로 검색 -->
<select id="selectSearchS" resultMap="boardRes" parameterClass="string">
<include refid="select-all" />
WHERE subject like #searchKeyword#
ORDER BY no DESC
</select>

<!-- 2. 내용으로 검색 -->
<select id="selectSearchC" resultMap="boardRes" parameterClass="string">
<include refid="select-all" />
WHERE content like #searchKeyword#
ORDER BY no DESC
</select>

<!-- 검색로직 끝-->

<!-- resultClass를 resultMap으로 사용해도 무방 -->
<select id="selectLastNo" resultClass="board" parameterClass="int">
SELECT max(no) as no FROM SBoard2_yang <!-- no의 최대값 -->
</select>

<!-- parameterClass="board" -->
<select id="selectPassword" resultMap="boardRes">
<include refid="select-all" /> <!-- select * from SBoard_yang -->
<include refid="where-no" /> <!-- where no = #no# -->
AND password = #password#
</select>

<!-- insert 쿼리문 정의 -->
<!-- # 붙어있는 컬럼들은 자바빈에서 매핑한 값들을 넣어줌 -->
<!-- 일반글 삽입 쿼리문 -->
<insert id="insertBoard" parameterClass="board">

<!-- upload를 안한 경우 6개의 컬럼만 필요 -->
<!-- upload 한 경우 데이터 처리는 update에서.. -->
INSERT INTO SBoard2_yang (no, subject, name, password, content, regdate,
re_step,re_level,ref)
VALUES(sboard2_yang_no_seq.nextval, #subject#, #name#, #password#, #content#, #regdate#,
#re_step#, #re_level#, sboard2_yang_no_seq.currval)
</insert>

<!-- 답변글 삽입 쿼리문 -->
<insert id="insertBoardReply" parameterClass="board">
INSERT INTO SBoard2_yang(no, subject, name, password, content, regdate, re_step, re_level, ref)
VALUES(sboard2_yang_no_seq.nextval, #subject#, #name#, #password#, #content#, #regdate#,#re_step#, #re_level#, #ref#)
</insert>

<!-- update 쿼리문 정의 -->
<update id="updateBoard" parameterClass="board">
UPDATE SBoard2_yang SET subject = #subject#, name = #name#, password = #password#, content = #content#
<include refid="where-no" />
</update>

<update id="updateFile" parameterClass="board">
UPDATE SBoard2_yang SET file_orgname = #file_orgname#, file_savname = #file_savname#
<include refid="where-no" />
</update>

<update id="updateReadHit" parameterClass="board">
UPDATE SBoard2_yang SET readhit = readhit + 1
<include refid="where-no" />
</update>

<!-- 답변글 수정 쿼리 -->
<update id="updateReplyStep" parameterClass="board">
UPDATE SBoard2_yang SET re_step=re_step+1 WHERE ref=#ref# AND re_step>#re_step#
</update>

<!-- delete 쿼리문 정의 -->
<delete id="deleteBoard" parameterClass="board">
DELETE FROM SBoard2_yang
<include refid="where-no" />
</delete>

</sqlMap>