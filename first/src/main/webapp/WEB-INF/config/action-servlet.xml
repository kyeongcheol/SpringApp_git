<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!-- 자동 스캔할 패키지 등록 -->       
<context:component-scan base-package="first"></context:component-scan>


<!-- HandlerMethodArgumentResolver -->
<!-- 사용자 요청이 controller에 도달하기 전에 그 요청의 파라미터들을 수정할 수 있도록 해준다. -->
<mvc:annotation-driven>
 <mvc:argument-resolvers>
  <bean class="first.common.resolver.CustomMapArgumentResolver"></bean>
 </mvc:argument-resolvers>
</mvc:annotation-driven>

<!-- console log interceptor -->
<mvc:interceptors>
 <mvc:interceptor>
  <mvc:mapping path="/**" />
  <bean id="loggerIntercepter" class="first.common.logger.LoggerInterceptor"></bean>
 </mvc:interceptor>
</mvc:interceptors>

<!-- DefaultAnnotationHandlerMapping -->
<!-- @RequestMapping 어노테이션을 직접 부여하고 이를 이용하기 위해 사용되는 매핑 -->
<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>

<!-- 다운로드 할 경우 : BeanNameViewResolver, 뷰 이름과 동일한 이름을 갖는 빈을 뷰 객체로 사용-->
<!-- 우선순위 0 -->
<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
p:order="0" />

<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>

<!-- viewResolver -->
<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver"
p:order="1" 
p:viewClass="org.springframework.web.servlet.view.JstlView"
p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"></bean>

</beans>